@model Restaurant_QKA.Models.Customer
@{
    ViewBag.Title = "UserProfile";
    Layout = "~/Areas/User/Views/Shared/_Layout.cshtml";
}

<section class="vh-120 gradient-custom-2" style="margin-top:200px">
    <div class="container py-5 h-100">
        <div class="row d-flex justify-content-center">
            <div class="col col-lg-9 col-xl-8">
                <div class="card">
                    @using (Html.BeginForm("UpdateProfile", "User", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken();
                        @Html.HiddenFor(m => m.CusID);
                        <div class="rounded-top text-white d-flex flex-row" style="background-color: #000; height:230px;">
                            <div class="ms-5 mt-6 d-flex flex-column" style="width: 150px;">
                                <img src="@Url.Content("~/Content/Cus/" + Model.ImageUrl)"
                                     alt="Avatar image" class="img-fluid img-thumbnail mt-4 mb-2"
                                     style="width: 150px; z-index: 1">
                                <div class="d-flex justify-content-between">
                                    <button type="button" class="btn text-white" id="editButton" onclick="enableEdit()" style="background-color: #C5705D; width: 150px">Chỉnh Sửa</button>
                                    <button type="submit" class="btn btn-warning" id="saveButton" style="display: none; width:150px">Lưu Thay Đổi</button>
                                </div>
                            </div>
                            <div class="ms-3" style="margin-top: 30px;">
                                <span>Thông tin cá nhân của: @Model.Name</span>
                                <p>Địa chỉ: @(Model.Address == null ? "chưa cập nhật" : @Model.Address)</p>
                            </div>
                        </div>
                        <div class="card-body p-5">
                            <div class="form-group d-flex">
                                <div class="form-outline mb-4 me-4 w-100" id="Name" style="display: none;">
                                    <label class="small mb-1" for="Name">Họ Và Tên</label>
                                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = "", disabled = "disabled" })
                                </div>
                            </div>
                            <div class="form-group d-flex">
                                <div class="form-outline mb-4 me-4 w-50">
                                    <label class="small mb-1" for="UserName">Tên Tài Khoản</label>
                                    @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", placeholder = "Enter your account", disabled = "disabled", @readonly = "readonly" })
                                </div>
                                <div class="form-outline mb-4 me-4 w-50">
                                    <label class="small mb-1" for="Email">Email</label>
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", type = "email", placeholder = "Enter your email", disabled = "disabled" })
                                </div>
                            </div>
                            <div class="form-group d-flex">
                                <div class="form-outline mb-4 me-4 w-50">
                                    <label class="small mb-1" for="Phone">SDT</label>
                                    @Html.TextBoxFor(m => m.Phone, new { @class = "form-control", type = "tel", placeholder = "Enter your phone number", disabled = "disabled" })
                                </div>
                                <div class="form-outline mb-4 me-4 w-50">
                                    <label class="small mb-1" for="Birthday">Ngày Sinh</label>
                                    @Html.TextBoxFor(m => m.DateOfBirth, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", disabled = "disabled" })
                                </div>
                            </div>
                            <div class="form-group d-flex">
                                <div class="form-outline mb-4 me-4 w-100">
                                    <label class="small mb-1" for="Address">Địa Chỉ</label>
                                    @Html.TextBoxFor(m => m.Address, new { @class = "form-control", placeholder = "Enter your address", disabled = "disabled" })
                                </div>
                            </div>
                            <div class="form-group d-flex">
                                <div class="mb-4 me-4 w-75">
                                    <button type="button" class="btn btn-danger" id="cancelButton" onclick="disableEdit()" style="display: none;">Hủy</button>
                                </div>
                                <div class="mb-4 me-4 w-25">
                                    <a class="btn btn-warning" id="cancelButton" href="@Url.Action("ChangePass","User")"  style="width:180px">Đổi Mật Khẩu</a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    @if (TempData["SuccessMessage"] != null)
     {
        <text>
         Swal.fire({
             title: 'Thành công',
             text: '@Html.Raw(TempData["SuccessMessage"])',
             icon: 'success',
             confirmButtonText: 'OK'
         });
         </text>
     }
    @if (TempData["ErrorMessage"] != null)
     {
        <text>
         Swal.fire({
             title: 'Thất Bại',
             text: '@Html.Raw(TempData["ErrorMessage"])',
             icon: 'error',
             confirmButtonText: 'OK'
         });
         </text>
     }
    function enableEdit()
    {
        // Enable all input fields except UserName
        var inputs = document.querySelectorAll('input[type="text"]:not([name="Name"]), input[type="text"]:not([name="UserName"]), input[type="email"], input[type="tel"], input[type="date"]');
        inputs.forEach(function (input) {
            input.disabled = false;
        });

        // Hide edit button and show save button
        document.getElementById('editButton').style.display = 'none';
        document.getElementById('Name').style.display = 'block';
        document.getElementById('saveButton').style.display = 'block';
        document.getElementById('cancelButton').style.display = 'block';
    }
    function disableEdit()
    {
        // Enable all input fields except UserName
        var inputs = document.querySelectorAll('input[type="text"]:not([name="Name"]), input[type="text"]:not([name="UserName"]), input[type="email"], input[type="tel"], input[type="date"]');
        inputs.forEach(function (input) {
            input.disabled = true;
        });

        // Hide edit button and show save button
        document.getElementById('editButton').style.display = 'block';
        document.getElementById('Name').style.display = 'none';
        document.getElementById('saveButton').style.display = 'none';
        document.getElementById('cancelButton').style.display = 'none';
    }
</script>

